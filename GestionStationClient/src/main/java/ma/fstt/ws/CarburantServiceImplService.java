
package ma.fstt.ws;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.2
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "CarburantServiceImplService", targetNamespace = "http://ws.fstt.ma/", wsdlLocation = "http://localhost:7778/service/carburant?wsdl")
public class CarburantServiceImplService
    extends Service
{

    private final static URL CARBURANTSERVICEIMPLSERVICE_WSDL_LOCATION;
    private final static WebServiceException CARBURANTSERVICEIMPLSERVICE_EXCEPTION;
    private final static QName CARBURANTSERVICEIMPLSERVICE_QNAME = new QName("http://ws.fstt.ma/", "CarburantServiceImplService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("http://localhost:7778/service/carburant?wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CARBURANTSERVICEIMPLSERVICE_WSDL_LOCATION = url;
        CARBURANTSERVICEIMPLSERVICE_EXCEPTION = e;
    }

    public CarburantServiceImplService() {
        super(__getWsdlLocation(), CARBURANTSERVICEIMPLSERVICE_QNAME);
    }

    public CarburantServiceImplService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CARBURANTSERVICEIMPLSERVICE_QNAME, features);
    }

    public CarburantServiceImplService(URL wsdlLocation) {
        super(wsdlLocation, CARBURANTSERVICEIMPLSERVICE_QNAME);
    }

    public CarburantServiceImplService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CARBURANTSERVICEIMPLSERVICE_QNAME, features);
    }

    public CarburantServiceImplService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public CarburantServiceImplService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns CarburantService
     */
    @WebEndpoint(name = "CarburantServiceImplPort")
    public CarburantService getCarburantServiceImplPort() {
        return super.getPort(new QName("http://ws.fstt.ma/", "CarburantServiceImplPort"), CarburantService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns CarburantService
     */
    @WebEndpoint(name = "CarburantServiceImplPort")
    public CarburantService getCarburantServiceImplPort(WebServiceFeature... features) {
        return super.getPort(new QName("http://ws.fstt.ma/", "CarburantServiceImplPort"), CarburantService.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CARBURANTSERVICEIMPLSERVICE_EXCEPTION!= null) {
            throw CARBURANTSERVICEIMPLSERVICE_EXCEPTION;
        }
        return CARBURANTSERVICEIMPLSERVICE_WSDL_LOCATION;
    }

}
