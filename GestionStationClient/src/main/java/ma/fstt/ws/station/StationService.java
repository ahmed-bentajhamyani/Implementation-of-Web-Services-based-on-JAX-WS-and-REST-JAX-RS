
package ma.fstt.ws.station;

import java.util.List;

import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.2
 * Generated source version: 3.0
 * 
 */
@WebService(name = "StationServiceMethod", targetNamespace = "http://station.ws.fstt.ma/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface StationService {


    /**
     * 
     * @return
     *     returns java.util.List<ma.fstt.ws.station.Station>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "getStations", targetNamespace = "http://station.ws.fstt.ma/", className = "ma.fstt.ws.station.GetStations")
    @ResponseWrapper(localName = "getStationsResponse", targetNamespace = "http://station.ws.fstt.ma/", className = "ma.fstt.ws.station.GetStationsResponse")
    @Action(input = "http://station.ws.fstt.ma/StationService/getStationsRequest", output = "http://station.ws.fstt.ma/StationService/getStationsResponse")
    public List<Station> getStations();

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "updateStation", targetNamespace = "http://station.ws.fstt.ma/", className = "ma.fstt.ws.station.UpdateStation")
    @ResponseWrapper(localName = "updateStationResponse", targetNamespace = "http://station.ws.fstt.ma/", className = "ma.fstt.ws.station.UpdateStationResponse")
    @Action(input = "http://station.ws.fstt.ma/StationService/updateStationRequest", output = "http://station.ws.fstt.ma/StationService/updateStationResponse")
    public void updateStation(
        @WebParam(name = "arg0", targetNamespace = "")
        Station arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "deleteStation", targetNamespace = "http://station.ws.fstt.ma/", className = "ma.fstt.ws.station.DeleteStation")
    @ResponseWrapper(localName = "deleteStationResponse", targetNamespace = "http://station.ws.fstt.ma/", className = "ma.fstt.ws.station.DeleteStationResponse")
    @Action(input = "http://station.ws.fstt.ma/StationService/deleteStationRequest", output = "http://station.ws.fstt.ma/StationService/deleteStationResponse")
    public void deleteStation(
        @WebParam(name = "arg0", targetNamespace = "")
        Station arg0);

    /**
     * 
     * @param arg0
     */
    @WebMethod
    @RequestWrapper(localName = "persistStation", targetNamespace = "http://station.ws.fstt.ma/", className = "ma.fstt.ws.station.PersistStation")
    @ResponseWrapper(localName = "persistStationResponse", targetNamespace = "http://station.ws.fstt.ma/", className = "ma.fstt.ws.station.PersistStationResponse")
    @Action(input = "http://station.ws.fstt.ma/StationService/persistStationRequest", output = "http://station.ws.fstt.ma/StationService/persistStationResponse")
    public void persistStation(
        @WebParam(name = "arg0", targetNamespace = "")
        Station arg0);

    /**
     * 
     * @param arg0
     * @return
     *     returns ma.fstt.ws.station.Station
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "findStation", targetNamespace = "http://station.ws.fstt.ma/", className = "ma.fstt.ws.station.FindStation")
    @ResponseWrapper(localName = "findStationResponse", targetNamespace = "http://station.ws.fstt.ma/", className = "ma.fstt.ws.station.FindStationResponse")
    @Action(input = "http://station.ws.fstt.ma/StationService/findStationRequest", output = "http://station.ws.fstt.ma/StationService/findStationResponse")
    public Station findStation(
        @WebParam(name = "arg0", targetNamespace = "")
        Long arg0);

}
